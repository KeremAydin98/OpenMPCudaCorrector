#include <omp.h>
#include <iostream>

const int <VAR_4> = 1000000;
const int <VAR_1> = 4;
const int <VAR_PAD> = 64;

int <FUNC_NAME>() {
    int data[<VAR_4>][<VAR_PAD>];
    int i;

    #pragma omp parallel num_threads(<VAR_1>)
    {
	int id = omp_get_thread_num();
	for (i = id; i < <VAR_4>; i += <VAR_1>) {
	    // Now each thread is writing to a different cache line
	    data[i][0] += 1;
	}

    }

    std::cout << "Final value of data[0][0]: " << data[0][0] << std::endl;

    return 0;
}