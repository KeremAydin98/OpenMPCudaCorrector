#include <stdio.h>
#include <omp.h>

void processSmallProblemSize(int <VAR_4>) {
    if (<VAR_4> <= omp_get_max_threads()) {
        // Perform the task sequentially
        for (int i = 0; i < <VAR_4>; i++) {
            printf("Thread %d is processing a small problem\n", i);
            // Perform the small problem task
        }
    } else {
        #pragma omp parallel num_threads(<VAR_4>)
        {
            int threadId = omp_get_thread_num();
            printf("Thread %d is processing a small problem\n", threadId);
            // Perform the small problem task
        }
    }
}

int <FUNC_NAME>() {
    int <VAR_4> = 4;

    // Process the small problem size
    processSmallProblemSize(<VAR_4>);

    return 0;
}
