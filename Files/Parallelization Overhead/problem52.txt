#include <stdio.h>
#include <omp.h>

#define NUM_THREADS 4
#define NUM_ITERATIONS 100000

int sharedResource = 0;

void updateSharedResource(int threadId) {
    // Perform some computation on the shared resource
    sharedResource += threadId;

    // Synchronize all threads to ensure visibility of the updated value
    #pragma omp barrier
}

int main() {
    omp_set_num_threads(NUM_THREADS);

    #pragma omp parallel
    {
        int threadId = omp_get_thread_num();

        for (int i = 0; i < NUM_ITERATIONS; i++) {
            updateSharedResource(threadId);
        }
    }

    printf("Final value of shared resource: %d\n", sharedResource);

    return 0;
}
