double <FUNC_NAME>(){	
	
	static long <VAR_4> = 100000;	
	double step; 
	double x;
    double <VAR_2>;
	step = 1.0/(double) <VAR_4>;

	int <VAR_1> = 16;
	int <VAR_PAD> = 8;
	double <VAR_3>[<VAR_1> * <VAR_PAD>] = {0};
	
	#pragma omp parallel num_threads(<VAR_1>)
	{
		int t = omp_get_thread_num();

		#pragma omp for
		for (int i = 0; i < <VAR_4>; i++){
			x = (i + 0.5) * step;
			<VAR_3>[t * <VAR_PAD>] += 4.0 / (1.0 + x*x);
		}
	}
	
	for (int i = 0; i < <VAR_1>; i++)
	{
		<VAR_2> += step * <VAR_3>[i * <VAR_PAD>];
	}
	
	return <VAR_2>;
}