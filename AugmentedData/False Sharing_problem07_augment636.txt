double foo(){
	
	static long SIZE = 100000;	
	double step; 
	double x;
    double result;
	step = 1.0/(double) SIZE;

	int nthreads = 16;
	double s_priv[nthreads] = {0};
	
	#pragma omp parallel num_threads(nthreads)
	{
		int t = omp_get_thread_num();

		#pragma omp for
		for (int i = 0; i < SIZE; i++){
			x = (i + 0.5) * step;
			s_priv[t] += 4.0 / (1.0 + x*x);
		}
	}
	
	for (int i = 0; i < nthreads; i++)
	{
		result += step * s_priv[i];
	}
	
	return result;
}