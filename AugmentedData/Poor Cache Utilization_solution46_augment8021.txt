#include <iostream>
#include <omp.h>

using namespace std;

int main() {
    const int N = 1000000;
    int d[N];

    #pragma omp parallel for schedule(static)
    for(int i = 0; i < N; i++) {
        d[i] = i;
    }

    int sum = 0;
    #pragma omp parallel for schedule(static) reduction(+:sum)
    for(int i = 0; i < N; i++) {
        sum += d[i];
    }

    cout << "Sum: " << sum << endl;

    return 0;
}