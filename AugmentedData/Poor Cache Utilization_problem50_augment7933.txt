#include <stdio.h>
#include <omp.h>

#define SIZE 1000

void processNonContiguousAccess(int* data) {
    #pragma omp parallel for
    for (int i = 0; i < SIZE; i++) {
        // Access data in a non-contiguous manner
        int index = (i * 2) % SIZE;
        data[index] += omp_get_thread_num();
    }
}

int bar() {
    // Initialize the data array
    int data[SIZE];

    for (int i = 0; i < SIZE; i++) {
        data[i] = i + 1;
    }

    // Process non-contiguous access on the data array
    processNonContiguousAccess(data);

    // Print the modified data array
    for (int i = 0; i < SIZE; i++) {
        printf("%d ", data[i]);
    }
    printf("\n");

    return 0;
}
