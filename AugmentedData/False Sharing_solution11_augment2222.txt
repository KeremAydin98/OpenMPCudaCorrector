#include <omp.h>
#include <iostream>

const int SIZE = 1000000;
const int nthreads = 4;
const int PADDING = 64;

int main() {
    int data[SIZE][PADDING];
    int i;

    #pragma omp parallel num_threads(nthreads)
    {
	int id = omp_get_thread_num();
	for (i = id; i < SIZE; i += nthreads) {
	    // Now each thread is writing to a different cache line
	    data[i][0] += 1;
	}

    }

    std::cout << "Final value of data[0][0]: " << data[0][0] << std::endl;

    return 0;
}