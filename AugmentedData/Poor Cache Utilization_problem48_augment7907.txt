#include <stdio.h>
#include <omp.h>

#define N 1000
#define CACHE_LINE_SIZE 64

void processStridedAccess(double* data, int stride) {
    #pragma omp parallel for
    for (int i = 0; i < N; i += stride) {
        // Access data with a larger stride
        data[i] = data[i] * 2.0;
    }
}

int main() {
    // Initialize the data array
    double data[N];

    for (int i = 0; i < N; i++) {
        data[i] = i + 1;
    }

    // Perform strided data processing
    int stride = CACHE_LINE_SIZE / sizeof(double);  // Set the stride to cache line size
    processStridedAccess(data, stride);

    // Print the processed data
    for (int i = 0; i < N; i++) {
        printf("%.2f ", data[i]);
    }
    printf("\n");

    return 0;
}
