#include <iostream>
#include <omp.h>

using namespace std;

int foo() {
    const int SIZE = 1000000;
    int x[SIZE];

    #pragma omp parallel for schedule(dynamic)
    for(int i = 0; i < SIZE; i++) {
        x[i] = i;
    }

    int sum = 0;
    #pragma omp parallel for schedule(dynamic) reduction(+:sum)
    for(int i = 0; i < SIZE; i++) {
        sum += x[i];
    }

    cout << "Sum: " << sum << endl;

    return 0;
}