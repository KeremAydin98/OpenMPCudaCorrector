#include <stdio.h>
#include <stdlib.h>
#include <omp.h>

#define SIZE 1000000

void process_array(int* array, int size) {
    int* temp = (int*) malloc(size * sizeof(int));

    // Perform some computation on the array
    for (int i = 0; i < size; i++) {
        temp[i] = array[i] * 2;
    }

    // Update the original array with the computed values
    for (int i = 0; i < size; i++) {
        array[i] = temp[i];
    }

    free(temp);
}

int bar() {
    int* d = (int*) malloc(SIZE * sizeof(int));

    // Initialize the array
    for (int i = 0; i < SIZE; i++) {
        d[i] = i;
    }

    #pragma omp parallel for
    for (int i = 0; i < SIZE; i++) {
        process_array(d, SIZE);
    }

    free(d);

    return 0;
}
